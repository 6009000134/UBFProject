//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:4.0.30319.42000
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

namespace Auctus.CustomUI.OAWorkflowModify4Test {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(Namespace="webservices.ModifyWorkflow.weaver.com.cn", ConfigurationName="OAWorkflowModify4Test.ModifyWorkflowPortType")]
    public interface ModifyWorkflowPortType {
        
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="out")]
        string ChangeWorkflow(string in0, string in1);
        
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="out")]
        System.Threading.Tasks.Task<string> ChangeWorkflowAsync(string in0, string in1);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ModifyWorkflowPortTypeChannel : Auctus.CustomUI.OAWorkflowModify4Test.ModifyWorkflowPortType, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ModifyWorkflowPortTypeClient : System.ServiceModel.ClientBase<Auctus.CustomUI.OAWorkflowModify4Test.ModifyWorkflowPortType>, Auctus.CustomUI.OAWorkflowModify4Test.ModifyWorkflowPortType {
        
        public ModifyWorkflowPortTypeClient() {
        }
        
        public ModifyWorkflowPortTypeClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public ModifyWorkflowPortTypeClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ModifyWorkflowPortTypeClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ModifyWorkflowPortTypeClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public string ChangeWorkflow(string in0, string in1) {
            return base.Channel.ChangeWorkflow(in0, in1);
        }
        
        public System.Threading.Tasks.Task<string> ChangeWorkflowAsync(string in0, string in1) {
            return base.Channel.ChangeWorkflowAsync(in0, in1);
        }
    }
}
